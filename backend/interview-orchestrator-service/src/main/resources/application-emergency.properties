# =========================================
# EMERGENCY PROFILE - NO DATABASE DEPENDENCIES
# =========================================
# Use this profile to start the service when database connections are unavailable
# Profile: emergency
# Usage: java -Dspring.profiles.active=emergency -jar app.jar

# SERVER
server.port=${PORT:8081}
server.address=0.0.0.0
server.servlet.context-path=/api/interview

# DISABLE SSL FOR RENDER DEPLOYMENT
server.ssl.enabled=false

# =========================================
# DISABLE ALL DATABASE CONNECTIONS
# =========================================
# Use H2 in-memory database for emergency startup
spring.datasource.url=jdbc:h2:mem:emergency_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=false

# JPA Configuration for H2
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# DISABLE FLYWAY COMPLETELY
spring.flyway.enabled=false

# =========================================
# DISABLE REDIS
# =========================================
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,org.springframework.boot.autoconfigure.session.SessionAutoConfiguration
spring.session.store-type=none

# =========================================
# MOCK EXTERNAL SERVICES
# =========================================
# Enable mock mode for all external service calls
app.mock-mode=true

# External service URLs (not used in mock mode)
app.services.ai-analytics.url=http://localhost:8003
app.services.question-engine.url=http://localhost:8001
app.services.transcript.url=http://localhost:8002
app.services.user-management.url=http://localhost:8080
app.services.mozilla-tts.url=http://localhost:8004
app.services.ai-avatar.url=http://localhost:8006
app.services.voice-synthesis.url=http://localhost:8007
app.services.voice-isolation.url=http://localhost:8008

# =========================================
# MINIMAL CONFIGURATION
# =========================================
# JWT Configuration (required for controllers)
app.jwt.secret=emergency_secret_key_for_startup_only_not_secure
app.jwt.expiry-ms=3600000

# WebSocket Configuration
app.websocket.allowed-origins=*
app.websocket.session-timeout=1800000
app.websocket.heartbeat-interval=30000

# CORS Configuration  
app.cors.allowed-origins=*
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# =========================================
# LOGGING - MINIMAL
# =========================================
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.level.com.company=INFO
logging.pattern.console=%d{HH:mm:ss} %-5level %logger{36} - %msg%n

# =========================================
# HEALTH CHECK - BASIC ONLY
# =========================================
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=never
management.health.defaults.enabled=true
management.health.db.enabled=false
management.health.redis.enabled=false
management.health.diskspace.enabled=false

# =========================================
# BANNER AND STARTUP
# =========================================
spring.main.banner-mode=console
spring.jpa.open-in-view=false
spring.main.lazy-initialization=true

# =========================================
# ERROR HANDLING
# =========================================
server.error.include-message=always
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false
