# =========================================
# PRODUCTION CONFIGURATION - INTERVIEW ORCHESTRATOR SERVICE
# =========================================

# SERVER - RENDER REQUIRES PORT BINDING
server.port=${PORT:10000}
server.address=0.0.0.0
server.servlet.context-path=/api/interview

# POSTGRESQL DATABASE - RENDER PRODUCTION
spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
# Username and password are included in DATABASE_URL for Render

# Connection pool settings to prevent prepared statement conflicts
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration for PostgreSQL
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# FLYWAY MIGRATIONS - ENABLED FOR PRODUCTION
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=false
# TEMPORARY: Disable validation for initial deployment to prevent prepared statement conflicts
spring.flyway.validate-on-migrate=${FLYWAY_VALIDATE:false}
spring.flyway.clean-disabled=true
# Flyway connection settings to prevent prepared statement conflicts
spring.flyway.connect-retries=3
spring.flyway.connect-retries-interval=10
spring.flyway.lock-retry-count=5

# SESSION MANAGEMENT - DISABLE REDIS FOR RENDER DEPLOYMENT
spring.session.store-type=none
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,org.springframework.boot.autoconfigure.session.SessionAutoConfiguration
# Redis disabled for initial deployment - can be enabled later
# spring.redis.host=${REDIS_HOST}
# spring.redis.port=${REDIS_PORT:6379}
# spring.redis.password=${REDIS_PASSWORD}

# EXTERNAL SERVICES - PRODUCTION URLS (Mock mode enabled for initial deployment)
app.mock-mode=${MOCK_MODE:true}
app.services.ai-analytics.url=${AI_ANALYTICS_URL:https://analytics.aria-prod.com}
app.services.question-engine.url=${QUESTION_ENGINE_URL:https://questions.aria-prod.com}
app.services.transcript.url=${TRANSCRIPT_URL:https://transcript.aria-prod.com}
app.services.transcript.websocket.url=${TRANSCRIPT_WS_URL:wss://transcript.aria-prod.com}
app.services.user-management.url=${USER_MGMT_URL:https://users.aria-prod.com}
app.services.internal.api-key=${INTERNAL_API_KEY:ARIA_INTERNAL_SERVICE_KEY_2024}

# WEBRTC CONFIGURATION - PRODUCTION (Jitsi)
app.webrtc.jitsi.domain=${JITSI_DOMAIN:meet.aria-prod.com}

# JWT CONFIG - SECURE FOR PRODUCTION
app.jwt.secret=${JWT_SECRET}
app.jwt.expiry-ms=${JWT_EXPIRY_MS:3600000}

# LOGGING - PRODUCTION LEVEL
logging.level.org.springframework=WARN
logging.level.com.company=INFO
logging.level.root=WARN
logging.file.name=${LOG_FILE_PATH:/app/logs/interview-orchestrator.log}

# ACTUATOR - LIMITED EXPOSURE FOR PRODUCTION
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true
# TEMPORARY: Disable security for health checks during initial deployment
management.security.enabled=false
management.endpoints.web.base-path=/actuator
