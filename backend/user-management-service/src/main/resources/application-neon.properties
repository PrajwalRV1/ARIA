# =========================================
# NEON PROFILE CONFIGURATION (Production-Ready)
# =========================================
# Migrated from Supabase to Neon PostgreSQL for unlimited connections

# =========================================
# SERVER CONFIGURATION
# =========================================
server.port=${PORT:10000}
server.address=0.0.0.0

# Fail-fast disabled to allow startup even with connection issues
spring.datasource.hikari.initialization-fail-timeout=-1
spring.sql.init.continue-on-error=true

# =========================================
# NEON POSTGRESQL DATABASE CONFIGURATION
# =========================================
# Neon serverless PostgreSQL - No connection limits!
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://ep-muddy-truth-ad583n4q-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&ApplicationName=ARIA-User-Management}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:neondb_owner}
spring.datasource.password=${DB_PASSWORD:npg_SxyCtjKD16EU}

# =========================================
# JPA/HIBERNATE CONFIGURATION (Optimized for Neon)
# =========================================
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:none}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.defer-datasource-initialization=false

# Neon-optimized JPA settings
spring.jpa.properties.hibernate.hbm2ddl.auto=none
spring.jpa.properties.hibernate.validator.apply_to_ddl=false
spring.jpa.properties.hibernate.validator.autoregister_listeners=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection pool settings optimized for Neon serverless
# Conservative settings to avoid connection exhaustion
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# Enable prepared statements (Neon supports them unlike Supabase pooler)
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.prepareThreshold=3
spring.datasource.hikari.data-source-properties.preparedStatementCacheSize=256

# =========================================
# FLYWAY MIGRATIONS - COMPLETELY DISABLED
# =========================================
spring.flyway.enabled=false
spring.flyway.check-location=false
spring.flyway.baseline-on-migrate=false
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=false

# =========================================
# REDIS CONFIGURATION (Upstash Redis - Production)
# =========================================
spring.redis.url=${SPRING_REDIS_URL:rediss://default:AaExAAIncDE3NTczYWIxNDNjYjA0NzI2YWQ2NmY0ZTZjZTg5Y2IyMXAxNDEyNjU@renewing-falcon-41265.upstash.io:6379}
spring.redis.timeout=5000ms
spring.redis.database=0
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.min-idle=1
spring.redis.lettuce.pool.max-wait=2000ms

# =========================================
# JWT CONFIG
# =========================================
app.jwt.secret=${JWT_SECRET:kV7pL9zR3mX1tU5qW8bC2yJ6fH4nE0sDmA3gK9xZ2vF8uQ4tY7rP1wE6iO5sL0hN}
app.jwt.expiry-ms=3600000
app.jwt.refresh-expiry-ms=604800000

# =========================================
# MAIL CONFIGURATION (Production SMTP)
# =========================================
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USERNAME:workwithrvprajwal@gmail.com}
spring.mail.password=${SMTP_PASSWORD:vclhowpwtmopdqdz}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8

# =========================================
# MULTIPART FILE UPLOAD
# =========================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# =========================================
# SPRING BOOT ACTUATOR (Health checks)
# =========================================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.health.redis.enabled=false
management.health.defaults.enabled=true
management.endpoint.health.cache.time-to-live=10s

# =========================================
# LOGGING (Production optimized)
# =========================================
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.com.company=DEBUG
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=WARN
logging.level.org.flywaydb=INFO

# =========================================
# CORS CONFIGURATION
# =========================================
cors.allowed-origins=${CORS_ORIGINS:https://aria-frontend.onrender.com}

# =========================================
# SECURITY HEADERS
# =========================================
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
