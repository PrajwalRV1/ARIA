services:
  # User Management Service (Spring Boot)
  - type: web
    name: aria-user-management
    runtime: docker
    plan: free
    dockerfilePath: backend/user-management-service/Dockerfile
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: PORT
        value: 8080
      - key: DATABASE_URL
        sync: false
      - key: DB_USERNAME
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: UPSTASH_REDIS_REST_URL
        sync: false
      - key: UPSTASH_REDIS_REST_TOKEN
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: CORS_ORIGINS
        value: https://aria-frontend.onrender.com
    healthCheckPath: /api/auth/actuator/health
    autoDeploy: true
    rootDir: .

  # Interview Orchestrator Service (Spring Boot)
  - type: web
    name: aria-interview-orchestrator
    runtime: docker
    plan: free
    dockerfilePath: backend/interview-orchestrator-service/Dockerfile
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: supabase
      - key: PORT
        value: 8081
      - key: DATABASE_URL
        sync: false
      - key: DB_USERNAME
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: UPSTASH_REDIS_REST_URL
        sync: false
      - key: UPSTASH_REDIS_REST_TOKEN
        sync: false
      - key: USER_MGMT_URL
        value: https://aria-user-management.onrender.com
      - key: CORS_ORIGINS
        value: https://aria-frontend.onrender.com
      - key: JWT_SECRET
        sync: false
    healthCheckPath: /api/interview/actuator/health
    autoDeploy: true
    rootDir: .

_databases:
  # Optional: PostgreSQL database (can use Supabase instead)
  # - name: aria-postgres
  #   databaseName: aria_db
  #   user: aria_user
  #   plan: free
