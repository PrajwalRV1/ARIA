services:
  # Frontend Service (Angular)
  - type: web
    name: aria-frontend
    env: static
    plan: free
    buildCommand: cd frontend && npm ci && npm run build
    staticPublishPath: frontend/dist/frontend
    envVars:
      - key: NODE_ENV
        value: production
    autoDeploy: true
    rootDir: .

  # User Management Service (Spring Boot)
  - type: web
    name: aria-user-management
    env: docker
    plan: free
    buildCommand: ""
    startCommand: ""
    dockerfilePath: backend/user-management-service/Dockerfile
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: render
      - key: PORT
        value: "8080"
      - key: DATABASE_URL
        value: "postgresql://postgres:CoolLife@AriaDB@db.deqfzxsmuydhrepyiagq.supabase.co:5432/postgres"
      - key: DB_USERNAME
        value: "postgres"
      - key: DB_PASSWORD
        value: "CoolLife@AriaDB"
      - key: UPSTASH_REDIS_REST_URL
        value: "redis://renewing-falcon-41265.upstash.io:6379"
      - key: UPSTASH_REDIS_REST_TOKEN
        value: "AaExAAIncDE3NTczYWIxNDNjYjA0NzI2YWQ2NmY0ZTZjZTg5Y2IyMXAxNDEyNjU"
      - key: JWT_SECRET
        value: "kV7pL9zR3mX1tU5qW8bC2yJ6fH4nE0sDmA3gK9xZ2vF8uQ4tY7rP1wE6iO5sL0hN"
      - key: CORS_ORIGINS
        value: "https://aria-frontend.onrender.com"
    healthCheckPath: /api/auth/actuator/health
    autoDeploy: true
    rootDir: .

  # Interview Orchestrator Service (Spring Boot)
  - type: web
    name: aria-interview-orchestrator
    env: docker
    plan: free
    buildCommand: ""
    startCommand: ""
    dockerfilePath: backend/interview-orchestrator-service/Dockerfile
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: supabase
      - key: PORT
        value: "8081"
      - key: DATABASE_URL
        value: "postgresql://postgres:CoolLife@AriaDB@db.deqfzxsmuydhrepyiagq.supabase.co:5432/postgres"
      - key: DB_USERNAME
        value: "postgres"
      - key: DB_PASSWORD
        value: "CoolLife@AriaDB"
      - key: UPSTASH_REDIS_REST_URL
        value: "redis://renewing-falcon-41265.upstash.io:6379"
      - key: UPSTASH_REDIS_REST_TOKEN
        value: "AaExAAIncDE3NTczYWIxNDNjYjA0NzI2YWQ2NmY0ZTZjZTg5Y2IyMXAxNDEyNjU"
      - key: USER_MGMT_URL
        value: "https://aria-user-management.onrender.com"
      - key: CORS_ORIGINS
        value: "https://aria-frontend.onrender.com"
      - key: JWT_SECRET
        value: "kV7pL9zR3mX1tU5qW8bC2yJ6fH4nE0sDmA3gK9xZ2vF8uQ4tY7rP1wE6iO5sL0hN"
    healthCheckPath: /api/interview/actuator/health
    autoDeploy: true
    rootDir: .

  # Speech Service (Python)
  - type: web
    name: aria-speech-service
    env: python
    plan: free
    buildCommand: pip install fastapi uvicorn pydantic
    startCommand: uvicorn main_simple:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: PORT
        value: "8001"
      - key: PYTHONPATH
        value: "."
    autoDeploy: true
    rootDir: speech-service

  # Adaptive Engine Service (Python)
  - type: web
    name: aria-adaptive-engine
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: PORT
        value: "8002"
      - key: PYTHONPATH
        value: "."
    autoDeploy: true
    rootDir: adaptive-engine

  # Analytics Service (Python)
  - type: web
    name: aria-analytics-service
    env: python
    plan: free
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: PORT
        value: "8003"
      - key: PYTHONPATH
        value: "."
    autoDeploy: true
    rootDir: ai-services/analytics-service

# databases:
#   - name: aria-postgres
#     databaseName: aria_db
#     user: aria_user
#     plan: free
